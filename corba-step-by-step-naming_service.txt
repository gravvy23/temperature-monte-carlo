### Set environment variable for dynamic module loading:
$ export LD_LIBRARY_PATH=/opt/nfs/corba/OB/lib:$LD_LIBRARY_PATH
### Compile IDL interface to generate C++ communication source code:
$ /opt/nfs/corba/OB/bin/idl TestInterface.idl
### Compile CORBA C++ server: 
$ c++ -w -fpermissive -I . -I /opt/nfs/corba/OB/include -L /opt/nfs/corba/OB/lib -o server server-naming_service.cpp Test*.cpp *.c -lOB -lCosNaming -lJTC -ldl -lpthread
### Compile CORBA C++ client:
$ c++ -w -fpermissive -I. -I/opt/nfs/corba/OB/include -L/opt/nfs/corba/OB/lib -o client client-naming_service.cpp TestInterface*.cpp -lOB -lCosNaming -lJTC -ldl -lpthread

### Start CORBA Name Service on localhost on given (unused) TCP port 
### (in background):
$ /opt/nfs/corba/OB/bin/nameserv -OAport <port> &
$ jobs

### Start CORBA server with unique "server name" (to be registered in 
### the Name Service available on given host:port location) (in background):
$ ./server -ORBnaming corbaloc:iiop:<host>:<port>/NameService <server_name> &
$ jobs

### Start CORBA client (with given location of Name Service to be queried)
### and program options "registered server name" and interger "power" value:
$ ./client -ORBnaming corbaloc:iiop:<host>:<port>/NameService <server_name> <power>

### Kill background processes. Delete generated source files and executables:
$ kill -HUP %2
$ kill -HUP %1
$ rm client server TestInterface.cpp TestInterface.h TestInterface_skel.cpp TestInterface_skel.h
